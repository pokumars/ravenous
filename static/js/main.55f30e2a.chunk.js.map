{"version":3,"sources":["logo.svg","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Business","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","googleMapsPage","concat","business","address","city","state","zipCode","react_default","a","createElement","className","href","url","target","src","imageSrc","alt","name","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSortByChange","handleSearch","pressedEnter","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","setState","event","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","onKeyPress","type","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oOCwCzBC,uCAnCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,eAAL,6BAAAC,OAAkDR,EAAKD,MAAMU,SAASC,QAAtE,MAAAF,OAAkFR,EAAKD,MAAMU,SAASE,KAAtG,MAAAH,OAA+GR,EAAKD,MAAMU,SAASG,MAAnI,MAAAJ,OAA6IR,EAAKD,MAAMU,SAASI,SAHlJb,wEASf,OAEIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAMf,KAAKJ,MAAMU,SAASU,IAAKC,OAAO,UAASN,EAAAC,EAAAC,cAAA,OAAKK,IAAKlB,KAAKJ,MAAMU,SAASa,SAAUC,IAAI,OAElGT,EAAAC,EAAAC,cAAA,UAAKb,KAAKJ,MAAMU,SAASe,MACzBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAMf,KAAKI,eAAgBa,OAAO,UACjCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,SAAIb,KAAKJ,MAAMU,SAASC,SACxBI,EAAAC,EAAAC,cAAA,SAAIb,KAAKJ,MAAMU,SAASE,MACxBG,EAAAC,EAAAC,cAAA,SAAIb,KAAKJ,MAAMU,SAASG,MAAxB,IAAgCT,KAAKJ,MAAMU,SAASI,WAGxDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,UAAKb,KAAKJ,MAAMU,SAASgB,UACzBX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUd,KAAKJ,MAAMU,SAASiB,OAA5C,UACAZ,EAAAC,EAAAC,cAAA,SAAIb,KAAKJ,MAAMU,SAASkB,YAAxB,sBA5BGC,IAAMC,YCYdC,mLAVP,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdd,KAAKJ,MAAMgC,WAAWC,IAAI,SAAAvB,GACvB,OAAOK,EAAAC,EAAAC,cAACiB,EAAD,CAAUxB,SAAUA,EAAUyB,IAAKzB,EAAS0B,eALxCP,IAAMC,WCkGlBO,qBAjGX,SAAAA,EAAYrC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IAChBpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KACDa,MAAO,CACVyB,KAAM,GACNC,SAAU,GACVC,OAAO,cAGTvC,EAAKwC,iBAAmBxC,EAAKwC,iBAAiBC,KAAtBxC,OAAAyC,EAAA,EAAAzC,CAAAD,IACxBA,EAAK2C,qBAAuB3C,EAAK2C,qBAAqBF,KAA1BxC,OAAAyC,EAAA,EAAAzC,CAAAD,IAC5BA,EAAK4C,mBAAqB5C,EAAK4C,mBAAmBH,KAAxBxC,OAAAyC,EAAA,EAAAzC,CAAAD,IAC1BA,EAAK6C,aAAe7C,EAAK6C,aAAaJ,KAAlBxC,OAAAyC,EAAA,EAAAzC,CAAAD,IACpBA,EAAK8C,aAAe9C,EAAK8C,aAAaL,KAAlBxC,OAAAyC,EAAA,EAAAzC,CAAAD,IAGpBA,EAAK+C,cAAgB,CACnBC,aAAc,aACdC,gBAAgB,SAChBC,gBAAgB,gBAlBFlD,8EAsBHmD,GACb,OAAGhD,KAAKS,MAAM2B,SAAWY,EAChB,SAEA,8CAKQA,GACjBhD,KAAKiD,SAAS,CACZb,OAAQY,IAEVhD,KAAK0C,wDAIUQ,GAEflD,KAAKiD,SAAS,CAACf,KAAMgB,EAAMjC,OAAOkC,qDAIfD,GAEnBlD,KAAKiD,SAAS,CAACd,SAAUe,EAAMjC,OAAOkC,6CAG3BD,GAEXlD,KAAKJ,MAAMwD,WAAWpD,KAAKS,MAAMyB,KAAMlC,KAAKS,MAAM0B,SAAUnC,KAAKS,MAAM2B,QACnEc,GACFA,EAAMG,+DAIY,IAAAC,EAAAtD,KAClB,OAAOF,OAAOyD,KAAKvD,KAAK4C,eAAef,IAAI,SAAAmB,GACvC,IAAIQ,EAAoBF,EAAKV,cAAcI,GAE3C,OAAQrC,EAAAC,EAAAC,cAAA,MAAIkB,IAAKyB,EACd1C,UAAWwC,EAAKG,eAAeD,GAC/BE,QAASJ,EAAKb,mBAAmBH,KAAKgB,EAAME,IAC9CR,0CAKIE,GAGK,SAAbA,EAAMnB,KACP/B,KAAK0C,aAAaQ,oCAMlB,OACAvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACGb,KAAK2D,wBAGVhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAO+C,YAAY,+BAA+BC,SAAU7D,KAAKqC,iBAAkByB,WAAY9D,KAAK2C,eACpGhC,EAAAC,EAAAC,cAAA,SAAO+C,YAAY,qBAAqBC,SAAU7D,KAAKwC,qBAAsBsB,WAAY9D,KAAK2C,gBAEhGhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,SAASL,QAAS1D,KAAK0C,cAA/B,qBA7FYjB,IAAMC,YC6BfsC,EAhCF,CACTC,OAAQ,SAAS/B,EAAMC,EAAUC,GAC7B,OAAO8B,MAAK,sFAAA7D,OAAuF6B,EAAvF,cAAA7B,OAAwG8B,EAAxG,aAAA9B,OAA4H+B,GAAS,CAC7I+B,QAAQ,CACRC,cAAa,UAAA/D,OALV,uIAORgE,KAAK,SAAAC,GACA,OAAOA,EAASC,SACjBF,KAAK,SAAAG,GACJ,GAAGA,EAAa5C,WAEZ,OADA6C,QAAQC,IAAIF,EAAa5C,YAClB4C,EAAa5C,WAAWC,IAAI,SAAAvB,GAE/B,OADAmE,QAAQC,IAAIpE,GACN,CACF0B,GAAI1B,EAAS0B,GACbb,SAAUb,EAASqE,UACnBtD,KAAMf,EAASe,KACfL,IAAKV,EAASU,IACdT,QAASD,EAAS6B,SAASyC,SAC3BpE,KAAMF,EAAS6B,SAAS3B,KACxBC,MAAOH,EAAS6B,SAAS1B,MACzBC,QAASJ,EAAS6B,SAAS0C,SAC3BvD,SAAUhB,EAASwE,WAAW,GAAGC,MACjCxD,OAAQjB,EAASiB,OACjBC,YAAalB,EAAS0E,oBC0B/BC,cA7Bb,SAAAA,EAAYrF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IAChBpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMJ,KAEDa,MAAO,CACVmB,WAAY,IAEd/B,EAAKuD,WAAavD,EAAKuD,WAAWd,KAAhBxC,OAAAyC,EAAA,EAAAzC,CAAAD,IANFA,0EASPqC,EAAMC,EAAUC,GAAO,IAAAkB,EAAAtD,KAGhCgE,EAAKC,OAAO/B,EAAMC,EAAUC,GAAQiC,KAAK,SAAAzC,GAEvC0B,EAAKL,SAAS,CAACrB,WAAYA,uCAK7B,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACqE,EAAD,CAAW9B,WAAYpD,KAAKoD,aAC5BzC,EAAAC,EAAAC,cAAEsE,EAAF,CAAevD,WAAY5B,KAAKS,MAAMmB,qBAxB5BH,IAAMC,WCTJ0D,QACW,cAA7BC,OAAOlD,SAASmD,UAEe,UAA7BD,OAAOlD,SAASmD,UAEhBD,OAAOlD,SAASmD,SAASC,MACvB,2DCZNC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.55f30e2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport './Business.css'\r\n\r\n\r\nclass Business extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.googleMapsPage =`http://maps.google.com/?q=${this.props.business.address}, ${this.props.business.city}, ${this.props.business.state}, ${this.props.business.zipCode}`;\r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <a href={this.props.business.url} target='_blank'><img src={this.props.business.imageSrc} alt=''/></a>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <a href={this.googleMapsPage} target=\"_blank\">\r\n                        <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                        </div>\r\n                    </a>\r\n                    <div className=\"Business-reviews\">\r\n                    <h3>{this.props.business.category}</h3>\r\n                    <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                    <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css'; //in same directory\r\nimport Business from '../Business/Business';//to parent directory and into sibling directory Business\r\n\r\nclass BusinessList extends React.Component {\r\n    render(){\r\n        return(\r\n            <div className=\"BusinessList\">\r\n            {this.props.businesses.map(business => {\r\n                return <Business business={business} key={business.id}/>;\r\n            })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state= {\r\n        term: '',\r\n        location: '',\r\n        sortBy:'best_match'\r\n      };\r\n\r\n      this.handleTermChange = this.handleTermChange.bind(this);\r\n      this.handleLocationChange = this.handleLocationChange.bind(this);\r\n      this.handleSortByChange = this.handleSortByChange.bind(this);\r\n      this.handleSearch = this.handleSearch.bind(this);\r\n      this.pressedEnter = this.pressedEnter.bind(this);\r\n      \r\n\r\n      this.sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated':'rating',\r\n        'Most Reviewed':'review_count'\r\n      };\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n      if(this.state.sortBy === sortByOption){\r\n        return 'active';\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    //search is sorted by what criteria\r\n    handleSortByChange(sortByOption) {\r\n      this.setState({\r\n        sortBy: sortByOption\r\n      });\r\n      this.handleSearch();\r\n    }\r\n\r\n    //search term\r\n    handleTermChange(event){\r\n      //console.log(event.target.value);\r\n      this.setState({term: event.target.value});\r\n    }\r\n\r\n    //search location\r\n    handleLocationChange(event) {\r\n      //console.log(event.target.value);\r\n      this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSearch(event){\r\n      //calls searchYelp  which takes (term, location, sortBy)\r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n      if (event){\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n\r\n            return (<li key={sortByOptionValue}\r\n               className={this.getSortByClass(sortByOptionValue)} \r\n               onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n            {sortByOption}</li>);\r\n        });\r\n    }\r\n\r\n    //pressing enter submits the search query\r\n    pressedEnter(event){\r\n      //to add \"enter to search functionality\", onKeyPress -> pressEnter() -> call handleSearch\r\n\r\n      if(event.key == 'Enter'){\r\n        this.handleSearch(event);\r\n        //event.preventDefault();\r\n      }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <form className=\"SearchBar\">\r\n          <div className=\"SearchBar-sort-options\">\r\n            <ul>\r\n              {this.renderSortByOptions()}\r\n            </ul>\r\n          </div>\r\n          <div className=\"SearchBar-fields\">\r\n            <input placeholder=\"Search Businesses e.g. Sushi\" onChange={this.handleTermChange} onKeyPress={this.pressedEnter} />\r\n            <input placeholder=\"Where? e.g Seattle\" onChange={this.handleLocationChange} onKeyPress={this.pressedEnter} />\r\n          </div>\r\n          <div className=\"SearchBar-submit\">\r\n            <a type=\"submit\" onClick={this.handleSearch}>Let's Go</a>\r\n          </div>\r\n      </form>);\r\n    }\r\n}\r\nexport default SearchBar;","const apiKey = 'kKX7QFD_viLkbo4EJkMSLLLxlAY9iovMd2rgf-jmkeYigUqVRM0nLz8eToeionYWuxUCpCFrcuLHuBajcWQIGazJP0f9oHZ-OWnkoxvyc0C8neEV4qCu9Wirds8HXXYx';\r\nconst Yelp = {\r\n    search: function(term, location, sortBy){\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,{\r\n            headers:{\r\n            Authorization :`Bearer ${apiKey}`\r\n        }\r\n    }).then(response =>{\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            if(jsonResponse.businesses){\r\n                console.log(jsonResponse.businesses);\r\n                return jsonResponse.businesses.map(business => {\r\n                    console.log(business);\r\n                    return{\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        url: business.url,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    };\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Yelp from './util/Yelp'\r\n\r\n\r\n const business = {\r\n  imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\r\n  name: 'MarginOtto Pizzeria',\r\n  address: '1010 Paddington Way',\r\n  city: 'Flavortown',\r\n  state: 'NY',\r\n  zipCode: '10101',\r\n  category: 'Italian',\r\n  rating: 4.5,\r\n  reviewCount: 90\r\n}; \r\nlet businesses1 = [business, business, business, business, business, business] \r\n \r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state= {\r\n      businesses: [],\r\n    };\r\n    this.searchYelp = this.searchYelp.bind(this);\r\n  }\r\n\r\n  searchYelp(term, location, sortBy){\r\n    //console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\r\n    //this.setState({businesses: businesses1});\r\n    Yelp.search(term, location, sortBy).then(businesses => {\r\n      //console.log(businesses.count);\r\n      this.setState({businesses: businesses}); \r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar searchYelp={this.searchYelp} />\r\n        < BusinessList businesses={this.state.businesses} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}